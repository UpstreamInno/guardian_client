{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport AnimatedNode from \"./AnimatedNode\";\nimport { val } from \"../val\";\n\nvar AnimatedAlways = function (_AnimatedNode) {\n  _inherits(AnimatedAlways, _AnimatedNode);\n\n  var _super = _createSuper(AnimatedAlways);\n\n  function AnimatedAlways(what) {\n    var _this;\n\n    _classCallCheck(this, AnimatedAlways);\n\n    _this = _super.call(this, {\n      type: 'always',\n      what: what.__nodeID\n    }, [what]);\n    _this._what = what;\n    return _this;\n  }\n\n  _createClass(AnimatedAlways, [{\n    key: \"update\",\n    value: function update() {\n      this.__getValue();\n    }\n  }, {\n    key: \"__onEvaluate\",\n    value: function __onEvaluate() {\n      val(this._what);\n      return 0;\n    }\n  }]);\n\n  return AnimatedAlways;\n}(AnimatedNode);\n\nexport function createAnimatedAlways(item) {\n  return new AnimatedAlways(item);\n}","map":{"version":3,"sources":["/home/ash/Documents/Code/guardian_client/CovidGuardianClient/node_modules/react-native-reanimated/src/core/AnimatedAlways.js"],"names":["AnimatedNode","val","AnimatedAlways","what","type","__nodeID","_what","__getValue","createAnimatedAlways","item"],"mappings":";;;;;;;;;;AAAA,OAAOA,YAAP;AACA,SAASC,GAAT;;IAEMC,c;;;;;AAGJ,0BAAYC,IAAZ,EAAkB;AAAA;;AAAA;;AAChB,8BAAM;AAAEC,MAAAA,IAAI,EAAE,QAAR;AAAkBD,MAAAA,IAAI,EAAEA,IAAI,CAACE;AAA7B,KAAN,EAA+C,CAACF,IAAD,CAA/C;AACA,UAAKG,KAAL,GAAaH,IAAb;AAFgB;AAGjB;;;;6BAEQ;AACP,WAAKI,UAAL;AACD;;;mCAEc;AACbN,MAAAA,GAAG,CAAC,KAAKK,KAAN,CAAH;AACA,aAAO,CAAP;AACD;;;;EAf0BN,Y;;AAkB7B,OAAO,SAASQ,oBAAT,CAA8BC,IAA9B,EAAoC;AACzC,SAAO,IAAIP,cAAJ,CAAmBO,IAAnB,CAAP;AACD","sourcesContent":["import AnimatedNode from './AnimatedNode';\nimport { val } from '../val';\n\nclass AnimatedAlways extends AnimatedNode {\n  _what;\n\n  constructor(what) {\n    super({ type: 'always', what: what.__nodeID }, [what]);\n    this._what = what;\n  }\n\n  update() {\n    this.__getValue();\n  }\n\n  __onEvaluate() {\n    val(this._what);\n    return 0;\n  }\n}\n\nexport function createAnimatedAlways(item) {\n  return new AnimatedAlways(item);\n}\n"]},"metadata":{},"sourceType":"module"}