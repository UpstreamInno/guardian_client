{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/home/ash/Documents/Code/guardian_client/CovidGuardianClient/node_modules/@expo/samples/ExpoLinksView.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as WebBrowser from 'expo-web-browser';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Touchable from 'react-native-platform-touchable';\nimport { Ionicons } from '@expo/vector-icons';\n\nvar ExpoLinksScreen = function (_React$Component) {\n  _inherits(ExpoLinksScreen, _React$Component);\n\n  var _super = _createSuper(ExpoLinksScreen);\n\n  function ExpoLinksScreen() {\n    var _this;\n\n    _classCallCheck(this, ExpoLinksScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this._handlePressDocs = function () {\n      WebBrowser.openBrowserAsync('http://docs.expo.io');\n    };\n\n    _this._handlePressForums = function () {\n      WebBrowser.openBrowserAsync('http://forums.expo.io');\n    };\n\n    return _this;\n  }\n\n  _createClass(ExpoLinksScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.optionsTitleText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 9\n        }\n      }, \"Resources\"), React.createElement(Touchable, {\n        style: styles.option,\n        background: Touchable.Ripple('#ccc', false),\n        onPress: this._handlePressDocs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.optionIconContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        source: require(\"./assets/images/expo-icon.png\"),\n        resizeMode: \"contain\",\n        fadeDuration: 0,\n        style: {\n          width: 20,\n          height: 20,\n          marginTop: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 15\n        }\n      })), React.createElement(View, {\n        style: styles.optionTextContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.optionText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }\n      }, \"Read the Expo documentation\")))), React.createElement(Touchable, {\n        style: styles.option,\n        background: Touchable.Ripple('#ccc', false),\n        onPress: this._handlePressForums,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.optionIconContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }\n      }, React.createElement(Ionicons, {\n        name: \"ios-chatboxes\",\n        size: 22,\n        color: \"#ccc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }\n      })), React.createElement(View, {\n        style: styles.optionTextContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.optionText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }\n      }, \"Ask a question on the Expo forums\")))));\n    }\n  }]);\n\n  return ExpoLinksScreen;\n}(React.Component);\n\nexport { ExpoLinksScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 15\n  },\n  optionsTitleText: {\n    fontSize: 16,\n    marginLeft: 15,\n    marginTop: 9,\n    marginBottom: 12\n  },\n  optionIconContainer: {\n    marginRight: 9\n  },\n  option: {\n    backgroundColor: '#fdfdfd',\n    paddingHorizontal: 15,\n    paddingVertical: 15,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderBottomColor: '#EDEDED'\n  },\n  optionText: {\n    fontSize: 15,\n    marginTop: 1\n  }\n});","map":{"version":3,"sources":["/home/ash/Documents/Code/guardian_client/CovidGuardianClient/node_modules/@expo/samples/ExpoLinksView.js"],"names":["WebBrowser","React","Touchable","Ionicons","ExpoLinksScreen","_handlePressDocs","openBrowserAsync","_handlePressForums","styles","optionsTitleText","option","Ripple","flexDirection","optionIconContainer","require","width","height","marginTop","optionTextContainer","optionText","Component","StyleSheet","create","container","flex","paddingTop","fontSize","marginLeft","marginBottom","marginRight","backgroundColor","paddingHorizontal","paddingVertical","borderBottomWidth","hairlineWidth","borderBottomColor"],"mappings":"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","sourcesContent":["import * as WebBrowser from 'expo-web-browser';\nimport React from 'react';\nimport { StyleSheet, Image, Text, View } from 'react-native';\nimport Touchable from 'react-native-platform-touchable';\nimport { Ionicons } from '@expo/vector-icons';\n\nexport default class ExpoLinksScreen extends React.Component {\n  render() {\n    return (\n      <View>\n        <Text style={styles.optionsTitleText}>Resources</Text>\n\n        <Touchable\n          style={styles.option}\n          background={Touchable.Ripple('#ccc', false)}\n          onPress={this._handlePressDocs}>\n          <View style={{ flexDirection: 'row' }}>\n            <View style={styles.optionIconContainer}>\n              <Image\n                source={require('./assets/images/expo-icon.png')}\n                resizeMode=\"contain\"\n                fadeDuration={0}\n                style={{ width: 20, height: 20, marginTop: 1 }}\n              />\n            </View>\n            <View style={styles.optionTextContainer}>\n              <Text style={styles.optionText}>Read the Expo documentation</Text>\n            </View>\n          </View>\n        </Touchable>\n\n        <Touchable\n          style={styles.option}\n          background={Touchable.Ripple('#ccc', false)}\n          onPress={this._handlePressForums}>\n          <View style={{ flexDirection: 'row' }}>\n            <View style={styles.optionIconContainer}>\n              <Ionicons name=\"ios-chatboxes\" size={22} color=\"#ccc\" />\n            </View>\n            <View style={styles.optionTextContainer}>\n              <Text style={styles.optionText}>Ask a question on the Expo forums</Text>\n            </View>\n          </View>\n        </Touchable>\n      </View>\n    );\n  }\n\n  _handlePressDocs = () => {\n    WebBrowser.openBrowserAsync('http://docs.expo.io');\n  };\n\n  _handlePressForums = () => {\n    WebBrowser.openBrowserAsync('http://forums.expo.io');\n  };\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 15,\n  },\n  optionsTitleText: {\n    fontSize: 16,\n    marginLeft: 15,\n    marginTop: 9,\n    marginBottom: 12,\n  },\n  optionIconContainer: {\n    marginRight: 9,\n  },\n  option: {\n    backgroundColor: '#fdfdfd',\n    paddingHorizontal: 15,\n    paddingVertical: 15,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderBottomColor: '#EDEDED',\n  },\n  optionText: {\n    fontSize: 15,\n    marginTop: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}