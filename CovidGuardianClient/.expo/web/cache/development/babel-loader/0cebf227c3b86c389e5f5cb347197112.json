{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/home/ash/Documents/Code/guardian_client/CovidGuardianClient/screens/LocationScreen.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as WebBrowser from \"expo-web-browser\";\nimport React, { Component } from \"react\";\nimport * as Permissions from 'expo-permissions';\nimport * as Location from 'expo-location';\nimport * as TaskManager from 'expo-task-manager';\nimport Constants from 'expo-constants';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingTop: Constants.statusBarHeight,\n    backgroundColor: '#ecf0f1'\n  },\n  welcome: {\n    fontSize: 20,\n    textAlign: 'center',\n    margin: 10\n  },\n  instructions: {\n    textAlign: 'center',\n    color: '#333333',\n    marginBottom: 5\n  },\n  paragraph: {\n    margin: 24,\n    fontSize: 18,\n    textAlign: 'center',\n    color: '#000'\n  }\n});\nvar TASK_GUARDIAN_LOCATION = \"guardian_location\";\nTaskManager.defineTask(TASK_GUARDIAN_LOCATION, function (_ref) {\n  var data = _ref.data,\n      error = _ref.error;\n\n  if (error) {\n    return;\n  }\n\n  if (data) {\n    var locations = data.locations;\n  }\n});\n\nvar LocationScreen = function (_Component) {\n  _inherits(LocationScreen, _Component);\n\n  var _super = _createSuper(LocationScreen);\n\n  function LocationScreen(props) {\n    var _this;\n\n    _classCallCheck(this, LocationScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      location: null,\n      errorMessage: null\n    };\n\n    _this.watchLocation = function _callee() {\n      var location;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n            case 2:\n              location = _context.sent;\n\n              _this.setState({\n                location: location\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.onPress = function _callee2() {\n      var _await$Location$reque, status, ios;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(Location.requestPermissionsAsync());\n\n            case 2:\n              _await$Location$reque = _context2.sent;\n              status = _await$Location$reque.status;\n              ios = _await$Location$reque.ios;\n\n              if (status !== 'granted') {\n                _this.setState({\n                  errorMessage: 'Permission to access location was denied'\n                });\n              }\n\n              if (!(status === 'granted')) {\n                _context2.next = 9;\n                break;\n              }\n\n              _context2.next = 9;\n              return _regeneratorRuntime.awrap(Location.startLocationUpdatesAsync(TASK_GUARDIAN_LOCATION, {\n                accuracy: Location.HIGH,\n                showsBackgroundLocationIndicator: true,\n                distanceInterval: '20',\n                deferredUpdatesInterval: '200',\n                deferredUpdatesDistance: '20',\n                pausesUpdatesAutomatically: true\n              }));\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    if (Platform.OS === 'android' && !Constants.isDevice) {\n      _this.setState({\n        errorMessage: 'Oops, this will not work on Sketch in an Android emulator. Try it on your device!'\n      });\n    } else {\n      _this.watchLocation();\n    }\n\n    return _this;\n  }\n\n  _createClass(LocationScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.watchLocation();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var text = 'Waiting..';\n\n      if (this.state.errorMessage) {\n        text = this.state.errorMessage;\n      } else if (this.state.location) {\n        text = JSON.stringify(this.state.location);\n      }\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: this.onPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }\n      }, \"Enable background location\")), React.createElement(Text, {\n        style: styles.paragraph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }\n      }, text));\n    }\n  }]);\n\n  return LocationScreen;\n}(Component);\n\n;\nLocationScreen.navigationOptions = {\n  header: null\n};\nexport default LocationScreen;","map":{"version":3,"sources":["/home/ash/Documents/Code/guardian_client/CovidGuardianClient/screens/LocationScreen.js"],"names":["WebBrowser","React","Component","Permissions","Location","TaskManager","Constants","styles","StyleSheet","create","container","flex","alignItems","justifyContent","paddingTop","statusBarHeight","backgroundColor","welcome","fontSize","textAlign","margin","instructions","color","marginBottom","paragraph","TASK_GUARDIAN_LOCATION","defineTask","data","error","locations","LocationScreen","props","state","location","errorMessage","watchLocation","getCurrentPositionAsync","setState","onPress","requestPermissionsAsync","status","ios","startLocationUpdatesAsync","accuracy","HIGH","showsBackgroundLocationIndicator","distanceInterval","deferredUpdatesInterval","deferredUpdatesDistance","pausesUpdatesAutomatically","Platform","OS","isDevice","text","JSON","stringify","navigationOptions","header"],"mappings":"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","sourcesContent":["/* eslint-disable global-require */\n\nimport * as WebBrowser from \"expo-web-browser\";\nimport React, { Component } from \"react\";\nimport * as Permissions from 'expo-permissions';\nimport * as Location from 'expo-location';\nimport * as TaskManager from 'expo-task-manager';\nimport Constants from 'expo-constants';\n\nimport {\n  Platform,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingTop: Constants.statusBarHeight,\n    backgroundColor: '#ecf0f1',\n  },\n  welcome: {\n    fontSize: 20,\n    textAlign: 'center',\n    margin: 10,\n  },\n  instructions: {\n    textAlign: 'center',\n    color: '#333333',\n    marginBottom: 5,\n  },\n  paragraph: {\n    margin: 24,\n    fontSize: 18,\n    textAlign: 'center',\n    color: '#000',\n  },\n});\n\nconst TASK_GUARDIAN_LOCATION = \"guardian_location\"\n\nTaskManager.defineTask(TASK_GUARDIAN_LOCATION, ({data, error}) => {\n  if (error) {\n    return;\n  }\n  if (data) {\n    const { locations } = data;\n    // TODO: AsyncStorage\n    // TODO: SecureStorage\n  }\n\n})\n\n\n// TODO: convert to functional component!\nclass LocationScreen extends Component {\n\n  state = {\n    location: null,\n    errorMessage: null,\n  };\n\n  constructor(props) {\n    super(props);\n    if (Platform.OS === 'android' && !Constants.isDevice) {\n      this.setState({\n        errorMessage: 'Oops, this will not work on Sketch in an Android emulator. Try it on your device!',\n      });\n    } else {\n      this.watchLocation();\n    }\n  }\n\n  componentDidMount() {\n    this.watchLocation();\n  }\n\n  watchLocation = async () => {\n    let location = await Location.getCurrentPositionAsync({});\n    this.setState({ location });\n  }\n\n  onPress = async () => {\n    const { status, ios } = await Location.requestPermissionsAsync();\n    if (status !== 'granted') {\n      this.setState({\n        errorMessage: 'Permission to access location was denied',\n      });\n    }\n    if (status === 'granted') {\n      await Location.startLocationUpdatesAsync(\n        TASK_GUARDIAN_LOCATION, {\n          accuracy: Location.HIGH,\n          showsBackgroundLocationIndicator: true,\n          //timeInterval: 0,\n          distanceInterval: '20', // meters\n          deferredUpdatesInterval: '200', //ms\n          deferredUpdatesDistance: '20', //meters\n          pausesUpdatesAutomatically: true,\n      })\n    }\n  };\n\n  render() {\n    let text = 'Waiting..';\n    if (this.state.errorMessage) {\n      text = this.state.errorMessage;\n    } else if (this.state.location) {\n      text = JSON.stringify(this.state.location);\n    }\n\n    return (\n      <View style={styles.container}>\n        <TouchableOpacity onPress={this.onPress}>\n          <Text>Enable background location</Text>\n        </TouchableOpacity>\n        <Text style={styles.paragraph}>{text}</Text>\n      </View>\n    );\n  }\n};\n\nLocationScreen.navigationOptions = {\n  header: null,\n};\n\nexport default LocationScreen;\n\n/* eslint-enable global-require */\n"]},"metadata":{},"sourceType":"module"}