{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/home/ash/Documents/Code/guardian_client/CovidGuardianClient/node_modules/@expo/samples/ExpoConfigView.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Constants from 'expo-constants';\nimport React from 'react';\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar ExpoConfigView = function (_React$Component) {\n  _inherits(ExpoConfigView, _React$Component);\n\n  var _super = _createSuper(ExpoConfigView);\n\n  function ExpoConfigView() {\n    var _this;\n\n    _classCallCheck(this, ExpoConfigView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this._renderSectionHeader = function (_ref) {\n      var section = _ref.section;\n      return React.createElement(SectionHeader, {\n        title: section.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 12\n        }\n      });\n    };\n\n    _this._renderItem = function (_ref2) {\n      var item = _ref2.item;\n\n      if (item.type === 'color') {\n        return React.createElement(SectionContent, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 14\n          }\n        }, item.value && React.createElement(Color, {\n          value: item.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 45\n          }\n        }));\n      } else {\n        return React.createElement(SectionContent, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          style: styles.sectionContentText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }\n        }, item.value));\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(ExpoConfigView, [{\n    key: \"render\",\n    value: function render() {\n      var _Constants$manifest = Constants.manifest,\n          manifest = _Constants$manifest === void 0 ? {} : _Constants$manifest;\n      var sections = [{\n        data: [{\n          value: manifest.sdkVersion\n        }],\n        title: 'sdkVersion'\n      }, {\n        data: [{\n          value: manifest.privacy\n        }],\n        title: 'privacy'\n      }, {\n        data: [{\n          value: manifest.version\n        }],\n        title: 'version'\n      }, {\n        data: [{\n          value: manifest.orientation\n        }],\n        title: 'orientation'\n      }, {\n        data: [{\n          value: manifest.primaryColor,\n          type: 'color'\n        }],\n        title: 'primaryColor'\n      }, {\n        data: [{\n          value: manifest.splash && manifest.splash.image\n        }],\n        title: 'splash.image'\n      }, {\n        data: [{\n          value: manifest.splash && manifest.splash.backgroundColor,\n          type: 'color'\n        }],\n        title: 'splash.backgroundColor'\n      }, {\n        data: [{\n          value: manifest.splash && manifest.splash.resizeMode\n        }],\n        title: 'splash.resizeMode'\n      }, {\n        data: [{\n          value: manifest.ios && manifest.ios.supportsTablet ? 'true' : 'false'\n        }],\n        title: 'ios.supportsTablet'\n      }];\n      return React.createElement(SectionList, {\n        style: styles.container,\n        renderItem: this._renderItem,\n        renderSectionHeader: this._renderSectionHeader,\n        stickySectionHeadersEnabled: true,\n        keyExtractor: function keyExtractor(item, index) {\n          return index;\n        },\n        ListHeaderComponent: ListHeader,\n        sections: sections,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return ExpoConfigView;\n}(React.Component);\n\nexport { ExpoConfigView as default };\n\nvar ListHeader = function ListHeader() {\n  var manifest = Constants.manifest;\n  return React.createElement(View, {\n    style: styles.titleContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.titleIconContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, React.createElement(AppIconPreview, {\n    iconUrl: manifest.iconUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.titleTextContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.nameText,\n    numberOfLines: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, manifest.name), React.createElement(Text, {\n    style: styles.slugText,\n    numberOfLines: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, manifest.slug), React.createElement(Text, {\n    style: styles.descriptionText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, manifest.description)));\n};\n\nvar SectionHeader = function SectionHeader(_ref3) {\n  var title = _ref3.title;\n  return React.createElement(View, {\n    style: styles.sectionHeaderContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.sectionHeaderText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, title));\n};\n\nvar SectionContent = function SectionContent(props) {\n  return React.createElement(View, {\n    style: styles.sectionContentContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 10\n    }\n  }, props.children);\n};\n\nvar AppIconPreview = function AppIconPreview(_ref4) {\n  var iconUrl = _ref4.iconUrl;\n\n  if (!iconUrl) {\n    iconUrl = 'https://s3.amazonaws.com/exp-brand-assets/ExponentEmptyManifest_192.png';\n  }\n\n  return React.createElement(Image, {\n    source: {\n      uri: iconUrl\n    },\n    style: {\n      width: 64,\n      height: 64\n    },\n    resizeMode: \"cover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 10\n    }\n  });\n};\n\nvar Color = function Color(_ref5) {\n  var value = _ref5.value;\n\n  if (!value) {\n    return React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 12\n      }\n    });\n  } else {\n    return React.createElement(View, {\n      style: styles.colorContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: [styles.colorPreview, {\n        backgroundColor: value\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }), React.createElement(View, {\n      style: styles.colorTextContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.sectionContentText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    }, value)));\n  }\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  titleContainer: {\n    paddingHorizontal: 15,\n    paddingTop: 15,\n    paddingBottom: 15,\n    flexDirection: 'row'\n  },\n  titleIconContainer: {\n    marginRight: 15,\n    paddingTop: 2\n  },\n  sectionHeaderContainer: {\n    backgroundColor: '#fbfbfb',\n    paddingVertical: 8,\n    paddingHorizontal: 15,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#ededed'\n  },\n  sectionHeaderText: {\n    fontSize: 14\n  },\n  sectionContentContainer: {\n    paddingTop: 8,\n    paddingBottom: 12,\n    paddingHorizontal: 15\n  },\n  sectionContentText: {\n    color: '#808080',\n    fontSize: 14\n  },\n  nameText: {\n    fontWeight: '600',\n    fontSize: 18\n  },\n  slugText: {\n    color: '#a39f9f',\n    fontSize: 14,\n    backgroundColor: 'transparent'\n  },\n  descriptionText: {\n    fontSize: 14,\n    marginTop: 6,\n    color: '#4d4d4d'\n  },\n  colorContainer: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  colorPreview: {\n    width: 17,\n    height: 17,\n    borderRadius: 2,\n    marginRight: 6,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#ccc'\n  },\n  colorTextContainer: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["/home/ash/Documents/Code/guardian_client/CovidGuardianClient/node_modules/@expo/samples/ExpoConfigView.js"],"names":["Constants","React","ExpoConfigView","_renderSectionHeader","section","title","_renderItem","item","type","value","styles","sectionContentText","manifest","sections","data","sdkVersion","privacy","version","orientation","primaryColor","splash","image","backgroundColor","resizeMode","ios","supportsTablet","container","index","ListHeader","Component","titleContainer","titleIconContainer","iconUrl","titleTextContainer","nameText","name","slugText","slug","descriptionText","description","SectionHeader","sectionHeaderContainer","sectionHeaderText","SectionContent","props","sectionContentContainer","children","AppIconPreview","uri","width","height","Color","colorContainer","colorPreview","colorTextContainer","StyleSheet","create","flex","paddingHorizontal","paddingTop","paddingBottom","flexDirection","marginRight","paddingVertical","borderWidth","hairlineWidth","borderColor","fontSize","color","fontWeight","marginTop","alignItems","borderRadius"],"mappings":"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","sourcesContent":["import Constants from 'expo-constants';\nimport React from 'react';\nimport { SectionList, Image, StyleSheet, Text, View } from 'react-native';\n\nexport default class ExpoConfigView extends React.Component {\n  render() {\n    const { manifest = {} } = Constants;\n    const sections = [\n      { data: [{ value: manifest.sdkVersion }], title: 'sdkVersion' },\n      { data: [{ value: manifest.privacy }], title: 'privacy' },\n      { data: [{ value: manifest.version }], title: 'version' },\n      { data: [{ value: manifest.orientation }], title: 'orientation' },\n      {\n        data: [{ value: manifest.primaryColor, type: 'color' }],\n        title: 'primaryColor',\n      },\n      {\n        data: [{ value: manifest.splash && manifest.splash.image }],\n        title: 'splash.image',\n      },\n      {\n        data: [\n          {\n            value: manifest.splash && manifest.splash.backgroundColor,\n            type: 'color',\n          },\n        ],\n        title: 'splash.backgroundColor',\n      },\n      {\n        data: [\n          {\n            value: manifest.splash && manifest.splash.resizeMode,\n          },\n        ],\n        title: 'splash.resizeMode',\n      },\n      {\n        data: [\n          {\n            value: manifest.ios && manifest.ios.supportsTablet ? 'true' : 'false',\n          },\n        ],\n        title: 'ios.supportsTablet',\n      },\n    ];\n\n    return (\n      <SectionList\n        style={styles.container}\n        renderItem={this._renderItem}\n        renderSectionHeader={this._renderSectionHeader}\n        stickySectionHeadersEnabled={true}\n        keyExtractor={(item, index) => index}\n        ListHeaderComponent={ListHeader}\n        sections={sections}\n      />\n    );\n  }\n\n  _renderSectionHeader = ({ section }) => {\n    return <SectionHeader title={section.title} />;\n  };\n\n  _renderItem = ({ item }) => {\n    if (item.type === 'color') {\n      return <SectionContent>{item.value && <Color value={item.value} />}</SectionContent>;\n    } else {\n      return (\n        <SectionContent>\n          <Text style={styles.sectionContentText}>{item.value}</Text>\n        </SectionContent>\n      );\n    }\n  };\n}\n\nconst ListHeader = () => {\n  const { manifest } = Constants;\n\n  return (\n    <View style={styles.titleContainer}>\n      <View style={styles.titleIconContainer}>\n        <AppIconPreview iconUrl={manifest.iconUrl} />\n      </View>\n\n      <View style={styles.titleTextContainer}>\n        <Text style={styles.nameText} numberOfLines={1}>\n          {manifest.name}\n        </Text>\n\n        <Text style={styles.slugText} numberOfLines={1}>\n          {manifest.slug}\n        </Text>\n\n        <Text style={styles.descriptionText}>{manifest.description}</Text>\n      </View>\n    </View>\n  );\n};\n\nconst SectionHeader = ({ title }) => {\n  return (\n    <View style={styles.sectionHeaderContainer}>\n      <Text style={styles.sectionHeaderText}>{title}</Text>\n    </View>\n  );\n};\n\nconst SectionContent = props => {\n  return <View style={styles.sectionContentContainer}>{props.children}</View>;\n};\n\nconst AppIconPreview = ({ iconUrl }) => {\n  if (!iconUrl) {\n    iconUrl = 'https://s3.amazonaws.com/exp-brand-assets/ExponentEmptyManifest_192.png';\n  }\n\n  return <Image source={{ uri: iconUrl }} style={{ width: 64, height: 64 }} resizeMode=\"cover\" />;\n};\n\nconst Color = ({ value }) => {\n  if (!value) {\n    return <View />;\n  } else {\n    return (\n      <View style={styles.colorContainer}>\n        <View style={[styles.colorPreview, { backgroundColor: value }]} />\n        <View style={styles.colorTextContainer}>\n          <Text style={styles.sectionContentText}>{value}</Text>\n        </View>\n      </View>\n    );\n  }\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  titleContainer: {\n    paddingHorizontal: 15,\n    paddingTop: 15,\n    paddingBottom: 15,\n    flexDirection: 'row',\n  },\n  titleIconContainer: {\n    marginRight: 15,\n    paddingTop: 2,\n  },\n  sectionHeaderContainer: {\n    backgroundColor: '#fbfbfb',\n    paddingVertical: 8,\n    paddingHorizontal: 15,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#ededed',\n  },\n  sectionHeaderText: {\n    fontSize: 14,\n  },\n  sectionContentContainer: {\n    paddingTop: 8,\n    paddingBottom: 12,\n    paddingHorizontal: 15,\n  },\n  sectionContentText: {\n    color: '#808080',\n    fontSize: 14,\n  },\n  nameText: {\n    fontWeight: '600',\n    fontSize: 18,\n  },\n  slugText: {\n    color: '#a39f9f',\n    fontSize: 14,\n    backgroundColor: 'transparent',\n  },\n  descriptionText: {\n    fontSize: 14,\n    marginTop: 6,\n    color: '#4d4d4d',\n  },\n  colorContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  colorPreview: {\n    width: 17,\n    height: 17,\n    borderRadius: 2,\n    marginRight: 6,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#ccc',\n  },\n  colorTextContainer: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}